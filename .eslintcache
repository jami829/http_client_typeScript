[{"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/index.js":"1","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/todo_reducer.js":"2","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/App.tsx":"3","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/index.tsx":"4","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Button.js":"5","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Nav.tsx":"6","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignOut.tsx":"7","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Welcome.tsx":"8","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/MyPage.tsx":"9","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove.tsx":"10","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Edit.tsx":"11","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove_completed.tsx":"12","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoListItem.js":"13","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignIn.tsx":"14","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoTemplate.js":"15","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_actions/todo_action.js":"16","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoList.js":"17","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/ToDo.js":"18","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignUp.tsx":"19","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_account.tsx":"20","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_Email_completed.tsx":"21","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_PW_completed.tsx":"22","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Footer.tsx":"23"},{"size":156,"mtime":1611667107447,"results":"24","hashOfConfig":"25"},{"size":719,"mtime":1611667107448,"results":"26","hashOfConfig":"27"},{"size":6910,"mtime":1611848041892,"results":"28","hashOfConfig":"25"},{"size":756,"mtime":1611668551098,"results":"29","hashOfConfig":"25"},{"size":464,"mtime":1611854869319,"results":"30","hashOfConfig":"25"},{"size":1242,"mtime":1611832420356,"results":"31","hashOfConfig":"25"},{"size":1529,"mtime":1611771713336,"results":"32","hashOfConfig":"25"},{"size":275,"mtime":1611832434964,"results":"33","hashOfConfig":"25"},{"size":3389,"mtime":1611832561042,"results":"34","hashOfConfig":"25"},{"size":3038,"mtime":1611763323592,"results":"35","hashOfConfig":"25"},{"size":2684,"mtime":1611735013970,"results":"36","hashOfConfig":"25"},{"size":1333,"mtime":1611771762600,"results":"37","hashOfConfig":"25"},{"size":1646,"mtime":1611667107469,"results":"38","hashOfConfig":"25"},{"size":10315,"mtime":1611890453310,"results":"39","hashOfConfig":"25"},{"size":313,"mtime":1611667107472,"results":"40","hashOfConfig":"25"},{"size":1186,"mtime":1611667107445,"results":"41","hashOfConfig":"25"},{"size":1139,"mtime":1611667107468,"results":"42","hashOfConfig":"25"},{"size":4242,"mtime":1611766808587,"results":"43","hashOfConfig":"25"},{"size":8929,"mtime":1611899778619,"results":"44","hashOfConfig":"25"},{"size":9032,"mtime":1611900305606,"results":"45","hashOfConfig":"25"},{"size":875,"mtime":1611854137007,"results":"46","hashOfConfig":"25"},{"size":718,"mtime":1611854360944,"results":"47","hashOfConfig":"25"},{"size":366,"mtime":1611847764378,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1kxj8of",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"inc0fj",{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/index.js",[],[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/todo_reducer.js",["108","109"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/App.tsx",["110","111","112","113","114","115","116"],"import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\n// css\nimport './App.css';\nimport Nav from './components/Nav';\nimport Remove from './components/Remove';\nimport Remove_completed from './components/Remove_completed';\nimport SignInModal from './components/SignIn';\nimport MyPage from './routes/MyPage';\nimport ToDo from './routes/ToDo';\nimport ImportantTodo from './components/Todo/ImportantTodo';\nimport SignUpModal from './components/SignUp';\nimport FindAccount from './components/Find_account';\nimport CompletedFindEmail from './components/Find_Email_completed';\nimport CompletedFindPw from './components/Find_PW_completed';\nimport Edit from './components/Edit';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n\n  const [login, setLogin] = useState<{\n    isLogin: boolean;\n    userId: string | null;\n    email: string | null;\n    password: string;\n    name: string | null;\n    mobile: string;\n    errorMessage: string;\n  }>({\n    isLogin: false,\n    userId: \"\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    mobile: \"\",\n    errorMessage: \"\"\n  })\n  const [todos, setTodos] = useState<any>([])\n\n  const History = useHistory();\n\n  const {\n    isLogin,\n    userId,\n    email,\n    name,\n    password,\n    mobile\n  } = login\n\n  console.log(name)\n\n  // 세션 저장소에 저장된 id를 불러와 req하자.\n  const handleResponseSuccess = (): void => {\n    axios\n      .post(\"https://api.get-todo.com/getMain\", {\n        id: window.sessionStorage.getItem(\"id\"),\n      })\n      // axios({\n      //   method: \"GET\",\n      //   url: \"https://api.get-todo.com/getMain\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //     // accept: \"application/json\",\n      //     // Cookie: window.sessionStorage.getItem(\"id\"),\n      //     withCredentials: true,\n      //     credentials: \"include\",\n      //   },\n      // })\n      // axios.get(\"https://api.get-todo.com/getMain\", {\n      //   withCredentials: true\n      // })\n      .then((res) => {\n        console.log(\"메인2 성공\", res.data);\n        setTodos({ todos: res.data });\n      })\n      .catch((error) => {\n        console.log(\"메인2 에러\", error.response);\n      });\n    setLogin({\n      ...login,\n      isLogin: true,\n      email: window.sessionStorage.getItem(\"email\"),\n      userId: window.sessionStorage.getItem(\"id\"),\n      name: window.sessionStorage.getItem(\"name\"),\n    });\n  };\n\n\n\n\n  const handleSignOut = () => {\n    setLogin({\n      ...login,\n      isLogin: false,\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      mobile: \"\"\n    })\n    // alert(\"로그아웃이 되었습니다.\")\n    doSignOut();\n  }\n\n  const doSignOut = (): void => {\n    window.sessionStorage.clear();\n  }\n\n  // Edit 컴포넌트의 결과를 끌어올린다.\n  const adoptModifiedInfo = (data: any) => {\n    if (data.email !== \"\") setLogin({ ...login, email: data.email });\n    if (data.password !== \"\") setLogin({ ...login, password: data.password });\n    if (data.name !== \"\") setLogin({ ...login, name: data.name });\n    if (data.mobile !== \"\") setLogin({ ...login, mobile: data.mobile });\n  };\n  // ToDo 컴포넌트의 결과를 끌어올린다.\n  const adoptRecentTodo = (data: any) => {\n    setTodos({ todos: data });\n  };\n\n  useLayoutEffect(() => {  // useEffect로 하면 새로고침 시 아주 잠시동안 로그아웃상태가 됨, 둘의 성격차이를 보면 알 수 있음.\n    // login\n\n    const userEmail = window.sessionStorage.getItem(\"email\");\n    if (userEmail) {\n      // return () => handleResponseSuccess();\n      handleResponseSuccess();\n    } else {\n      // handleSignOut();\n      // window.sessionStorage.clear();\n    }\n    // adoptRecentTodo;\n    // console.log(\"메인2 변경감지\", this.state);\n\n  }, [email])\n\n  // useLayoutEffect(() => {\n  //   const userEmail = window.sessionStorage.getItem(\"email\");\n  //   if (userEmail) {\n  //     // History.push(\"/\");\n  //     try {\n  //       handleResponseSuccess();\n  //     }\n  //     catch {\n  //       // window.sessionStorage.clear();\n  //     }\n  //   }\n  // }, [email])\n\n  console.log(\"login\", login)\n\n\n  return (\n    <Router>\n      <div className=\"menu\">\n        <Nav resetLogin={handleSignOut} loginUserInfo={login} />\n      </div>\n      <div className=\"screen\">\n        <Route\n          path={\"/\"}\n          exact={true}\n          render={() =>\n            isLogin ? ( // 새로고침해도 로그인 상태를 유지시키기 위해 localstorage에 저장된 정보를 사용한다. local storage는 사용자가 지우지 않는 이상 영구적으로 계속 브라우저에 남아있음 (단, session storage는 브라우저가 닫은 겨우 사라지고, 브라우저 내에서 탬을 생성하는 경우에도 별도의 영역으로 할당됨.)\n              <ToDo\n                userId={userId}\n                email={email}\n                name={name}\n                todos={todos}\n                adoptRecentTodo={adoptRecentTodo}\n              />\n            ) : (\n                <SignInModal\n                  handleResponseSuccess={handleResponseSuccess}\n                />\n              )\n          }\n        />\n        <Route path={\"/todo\"} component={ToDo} />\n        <Route\n          path=\"/mypage\"\n          render={() =>\n            // isLogin ? (\n            <MyPage\n              id={userId}\n              name={name}\n              email={email}\n              password={password}\n              mobile={mobile}\n              adoptModifiedInfo={adoptModifiedInfo}\n              signOut={handleSignOut}\n            />\n            // ) : (\n            //   <MyPage />\n            // )\n          }\n        />\n        { // 시우님께 여쭤보기\n        /* <Route\n          path={\"/important\"}\n          render={() =>\n            <ImportantTodo\n              todos={() => {\n                axios\n                  .get(\"https://api.get-todo.com/important\", userId)\n                  .then((res) => res.data);\n              }}\n            />\n          }\n        /> */}\n        <Route path={\"/signup\"} component={SignUpModal} />\n        <Route path={\"/findaccount\"} component={FindAccount} />\n        <Route path={\"/useremail\"} component={CompletedFindEmail} />\n        <Route path={\"/userpw\"} component={CompletedFindPw} />\n        <Route path={\"/edit\"} component={Edit} />\n        <Route path={\"/remove\"} render={() => <Remove signOut={handleSignOut} pass={password} />} />\n        {/* <Route path={\"/remove\"} signOut={handleSignOut} pass={login.password} >\n          <Remove />\n        </Route> */}\n        {/* <Route path={\"/remove\"} component={Remove} /> */}\n        <Route path={\"/remove_user_completed\"} component={Remove_completed} signOut={handleSignOut} />\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/index.tsx",["117"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// 리덕스 사용\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Reducer from \"./_reducers\";\n\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__?: any\n  }\n}\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Button.js",["118","119"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Nav.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignOut.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Welcome.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/MyPage.tsx",["120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\n\n// components\nimport Remove from \"../components/Remove\";\nimport Edit from \"../components/Edit\";\nimport Button from \"../components/Button\";\nimport \"./MyPage.scss\";\n\ninterface Props {\n  id: string | null;\n  name: string | null;\n  email: string | null;\n  password: string;\n  mobile: string;\n  adoptModifiedInfo: (data: any) => void;\n  signOut: () => void;\n}\n\nconst MyPage: React.FC<Props> = (props) => {\n\n  console.log(\"myProps\", props)\n\n\n  const [mypageInfo, setMypageInfo] = useState<{\n    email: string | null;\n    password: string;\n    name: string | null;\n    mobile: string;\n  }>({\n    email: props.email,\n    password: props.password,\n    name: props.name,\n    mobile: props.mobile\n  })\n  const makeChange = (data: any) => {\n    if (data.password !== \"\") setMypageInfo({ ...mypageInfo, password: data.password });\n    if (data.name !== \"\") setMypageInfo({ ...mypageInfo, name: data.name });\n    props.adoptModifiedInfo(data);\n  }\n\n  useEffect(() => {\n    mypageInfo;\n    makeChange;\n  })\n\n  const { email, name } = mypageInfo;\n\n  return (\n    <>\n      <br />\n      <br />\n      <section className=\"mypage\">\n        <div className=\"myinfo-title\">&#129296; 회원정보</div>\n        <div>\n          <div className=\"email-info\">\n            <div className=\"description\">e-mail</div>\n            <div className=\"print\">{email}</div>\n          </div>\n          <div className=\"pw-info\">\n            <div className=\"description\">PW</div>\n            <div className=\"print\">******</div>\n          </div>\n          <div className=\"name-info\">\n            <div className=\"description\">고객명</div>\n            <div className=\"print\">{name}</div>\n          </div>\n          <div className=\"mobile-info\">\n            <div className=\"description\">연락처</div>\n            <div className=\"print\">010-****-****</div>\n          </div>\n        </div>\n        <div className=\"myinfobox\">\n          <div>\n            <Button>\n              {/* props내리기 --> 아래와 같이 작성하면 props.location 혹은 props.history.location에 아래 정보가 담겨 전달\n                    전달받은 Remove.js는 this.props.location 혹은 this.props.history.location에 담긴 pw를 사용할 수 있음\n                */}\n              <Link\n                to={{\n                  pathname: \"/remove\",\n                  // state: {\n                  //   password: props.password,\n                  // },\n                  // signOut: props.signOut, // 메소드화가 되어 전달되어질 것. ex) signOut();\n                }}\n\n                style={{ color: `white`, textDecoration: `none` }}\n\n              // to={\"/remove\"}\n              // style={{ textDecoration: \"none\", color: \"white\" }}\n              // email={email}\n              // password={password}\n              // name={name}\n              // mobile={mobile}\n              >\n                회원탈퇴\n                </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n      <br />\n      <br />\n      <br />\n      <hr />\n      <br />\n      <br />\n      <br />\n      <section>\n        <Edit\n          // to={\"/edit\"}\n          // style={{ textDecoration: \"none\", color: \"black\" }}\n          makeChange={makeChange}\n        />\n      </section>\n    </>\n  )\n}\n\n\n\nexport default MyPage;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove.tsx",["124","125","126"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport ReactRouterPropTypes from \"../../node_modules/react-router-prop-types\"\n\n\n\n//fakedate\n// import user from \"../test_data_user.json\";\n\n// interface MatchParam {\n//   signOut: () => void;\n//   state: {\n//     password: string;\n//   }\n\n// }\n// interface RemoveProps extends RouteComponentProps<any> {\n//   signOut: () => void;\n//   state: {\n//     password: string;\n//   }\n// }\n// type RemoveProps = RouteComponentProps<any>;\n\ninterface removeProps {\n  // extends RouteComponentProps {\n  pass?: string;\n  signOut: () => void;\n}\n\n// function Remove(props: removeProps) {\nconst Remove: React.FC<removeProps> = (props) => {\n  console.log(\"remove\", props)\n  const [modal, setModal] = useState<boolean>(true);\n  const [input, setInput] = useState<{ password?: string, errorMessage?: string }>({ password: \"\", errorMessage: \"\" })\n\n  const History = useHistory()\n\n  const closeModal = () => {\n    setModal(\n      false\n    )\n    // window.history.go(-1)\n    History.push(\"/mypage\")\n  }\n\n  const handleInputValue = (key: string) => (text: React.ChangeEvent<HTMLInputElement>) => {\n    // key: password 아래 렌더부분에 설정해놈.\n    setInput({\n      [key]: text.target.value\n    })\n    // console.log(\"removeInput\", input.password)\n  }\n\n  const handleClickRemoveUserInfo = () => {\n    const inputPw = {\n      password: input.password\n    }\n\n    axios.post(\"https://api.get-todo.com/remove\", inputPw)\n      .then((response) => {\n        console.log(\"handleClickRemoveUserInfo\", response)\n      })\n    props.signOut()\n    History.push({\n      pathname: \"/remove_user_completed\",\n    })\n  }\n\n  return (\n    <>\n      {modal === true ?\n        (<div className=\"modal\">\n          <div className=\"modal_overlay\" onClick={closeModal}></div>\n          <div className=\"modal_content\">\n            <h1>회원탈퇴</h1>\n\n            <div className=\"container\">\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                <div className=\"container1\">\n                  <div>비밀번호를 입력하세요.</div>\n                  <div>\n                    <span>PW</span>\n                    <input\n                      type=\"password\"\n                      onChange={handleInputValue(\"password\")}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <div>{input.errorMessage}</div>\n\n                  <Button\n                    className=\"signUp_btn\"\n                    onClick={handleClickRemoveUserInfo}\n                  >\n                    계정 삭제\n                </Button>\n\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        ) : null}\n    </>\n  )\n}\n\n// Remove.propTypes = {\n//   history: ReactRouterPropTypes.history.isRequired\n// }\n\nexport default Remove;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Edit.tsx",["127","128","129","130"],"import { string } from \"prop-types\";\nimport React, { useCallback, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Button from \"./Button\";\n\nimport \"./Edit.scss\";\n\n/*****************************************************************\n                            리액트 훅 명세표\n\n(1) useReducer\n - Input 개체가 다수일 때, 이것들에 의한 state 변화를 한번에 관리하기 위함\n - 클래스 컴포넌트에서 e.target.value들에 대한 setState를 한번에 한 것과 동일\n - \n\n(2) useCallback\n - ToDo.js 컴포넌트의 주석 참조 부탁드립니다.\n******************************************************************/\n\ninterface State {\n  password: string;\n  name: string;\n}\n\n// reducer hook 액션 정의\nfunction reducer(state: State, action: any) {\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n}\n\ninterface editProps {\n  makeChange: (data: any) => void;\n}\n\n\nconst Edit: React.FC<editProps> = (props) => {\n  // reducer hook으로 한꺼번에 state 관리할 대상 정의\n  const [state, dispatch] = useReducer(reducer, {\n    password: \"\",\n    name: \"\",\n  });\n\n  const { password, name } = state;\n\n  // reducer hook 구동 대상(\"액션값\")은 \"이벤트 객체(e.target 값)\"라고 설정\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(e.target);\n  };\n\n  // reducer hook 구동 결과(state)를 부모(MyPage.js) 컴포넌트로 끌어올리기\n  const onClick = useCallback(() => {\n    console.log(`제출!! =======>\n    최종제출 비밀번호: ${state.password}\n    최종제출 이름: ${state.name}\n    `);\n\n    props.makeChange(state);\n  }, [props.makeChange, state]);\n\n  return (\n    <>\n      <section className=\"editpage\">\n        <div className=\"myinfo-title\">&#9997; 회원정보 수정</div>\n        <div>\n          <div>\n            <div className=\"description\">PW</div>\n            <input\n              className=\"editbox\"\n              type=\"text\"\n              name=\"password\"\n              value={password}\n              placeholder=\"변경할 비밀번호를 입력하세요\"\n              onChange={onChange}\n            ></input>\n          </div>\n          <div>\n            <div className=\"description\">고객명</div>\n            <input\n              className=\"editbox\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"변경할 고객명을 입력하세요\"\n              onChange={onChange}\n            ></input>\n          </div>\n        </div>\n      </section>\n      <div>\n        <Button onClick={onClick}>수정</Button>\n      </div>\n    </>\n  );\n};\n\nexport default Edit;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove_completed.tsx",["131"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\"\nimport Button from \"./Button\";\n\ninterface RemoveUserCompletedState {\n  isModalOpen: boolean\n}\nconst RemoveUserCompleted: React.FC<RemoveUserCompletedState> = (props) => {\n\n  const [modal, setModal] = useState<boolean>(true)\n  const History = useHistory();\n\n  const closeModal = () => {\n    setModal(\n      false\n    )\n    // this.props.history.push(\"/\")\n    History.push(\"/\")\n\n  };\n\n\n  return (\n    <>\n      { modal === true ?\n        <div className=\"modal\">\n          <div className=\"modal_overlay\" onClick={closeModal}></div>\n          <div className=\"modal_content\">\n            <h1>회원 탈퇴</h1>\n\n            <div className=\"container\">\n\n              <div className=\"container1\">\n\n                <div>\n                  회원 탈퇴가 완료되었습니다.\n                </div>\n\n              </div>\n              <div>\n                <NavLink to=\"/\" className='signUp_link'>\n                  <Button\n                    className=\"signUp_btn\"\n                  >\n                    로그인 페이지\n                </Button>\n                </NavLink>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        : null}\n    </>\n  );\n}\n\n\nexport default RemoveUserCompleted;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoListItem.js",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignIn.tsx",["132","133","134","135","136"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoTemplate.js",["137","138"],"import React from \"react\";\nimport \"./TodoStyle/TodoTemplate.scss\";\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"appTemplate\">\n      <div className=\"appTitle\">&#128540; SET TO-DO!</div>\n      <div className=\"appContent\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_actions/todo_action.js",["139","140","141","142","143","144"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoList.js",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/ToDo.js",["145","146","147","148","149"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignUp.tsx",["150","151","152"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_account.tsx",["153","154","155","156","157"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_Email_completed.tsx",["158","159","160"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"./Button\";\n\n\nfunction CompletedFindEmail({ location }: any) {\n\n  console.log(location)\n  return (\n    <div className=\"modal\">\n      <div className=\"modal_overlay\"></div>\n      <div className=\"modal_content\">\n        <h2>e-mail</h2>\n\n        <div className=\"container\">\n          <div className=\"find_e-mail_box\">\n            <div className=\"information\">\n              {location.state}\n            </div>\n          </div>\n\n          <NavLink to=\"/findaccount\">\n            <Button className=\"findBtn\">PW 찾기</Button>\n          </NavLink>\n\n          <NavLink to=\"\" className=\"signUp_link\">\n            <Button className=\"signUp_btn\">로그인 페이지로 돌아가기</Button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default CompletedFindEmail;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_PW_completed.tsx",["161","162","163"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Footer.tsx",["164"],{"ruleId":"165","severity":1,"message":"166","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":45},{"ruleId":"165","severity":1,"message":"169","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":44},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"170","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"175","line":13,"column":8,"nodeType":"170","messageId":"174","endLine":13,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":22,"column":1,"nodeType":"167","messageId":"168","endLine":22,"endColumn":15},{"ruleId":"176","severity":1,"message":"177","line":41,"column":38,"nodeType":"178","messageId":"179","endLine":41,"endColumn":41,"suggestions":"180"},{"ruleId":"172","severity":1,"message":"181","line":43,"column":9,"nodeType":"170","messageId":"174","endLine":43,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":113,"column":36,"nodeType":"178","messageId":"179","endLine":113,"endColumn":39,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"177","line":120,"column":34,"nodeType":"178","messageId":"179","endLine":120,"endColumn":37,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"177","line":20,"column":36,"nodeType":"178","messageId":"179","endLine":20,"endColumn":39,"suggestions":"184"},{"ruleId":"165","severity":1,"message":"166","line":22,"column":16,"nodeType":"185","messageId":"168","endLine":22,"endColumn":26},{"ruleId":"165","severity":1,"message":"186","line":22,"column":17,"nodeType":"170","messageId":"171","endLine":22,"endColumn":22},{"ruleId":"172","severity":1,"message":"187","line":2,"column":16,"nodeType":"170","messageId":"174","endLine":2,"endColumn":23},{"ruleId":"172","severity":1,"message":"188","line":6,"column":8,"nodeType":"170","messageId":"174","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":17,"column":29,"nodeType":"178","messageId":"179","endLine":17,"endColumn":32,"suggestions":"189"},{"ruleId":"176","severity":1,"message":"177","line":37,"column":29,"nodeType":"178","messageId":"179","endLine":37,"endColumn":32,"suggestions":"190"},{"ruleId":"172","severity":1,"message":"187","line":3,"column":10,"nodeType":"170","messageId":"174","endLine":3,"endColumn":17},{"ruleId":"172","severity":1,"message":"191","line":3,"column":19,"nodeType":"170","messageId":"174","endLine":3,"endColumn":38},{"ruleId":"172","severity":1,"message":"192","line":5,"column":8,"nodeType":"170","messageId":"174","endLine":5,"endColumn":28},{"ruleId":"172","severity":1,"message":"193","line":1,"column":10,"nodeType":"170","messageId":"174","endLine":1,"endColumn":16},{"ruleId":"172","severity":1,"message":"194","line":3,"column":10,"nodeType":"170","messageId":"174","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":28,"column":40,"nodeType":"178","messageId":"179","endLine":28,"endColumn":43,"suggestions":"195"},{"ruleId":"176","severity":1,"message":"177","line":36,"column":22,"nodeType":"178","messageId":"179","endLine":36,"endColumn":25,"suggestions":"196"},{"ruleId":"172","severity":1,"message":"197","line":9,"column":66,"nodeType":"170","messageId":"174","endLine":9,"endColumn":71},{"ruleId":"172","severity":1,"message":"198","line":1,"column":28,"nodeType":"170","messageId":"174","endLine":1,"endColumn":43},{"ruleId":"172","severity":1,"message":"199","line":6,"column":10,"nodeType":"170","messageId":"174","endLine":6,"endColumn":13},{"ruleId":"172","severity":1,"message":"200","line":6,"column":15,"nodeType":"170","messageId":"174","endLine":6,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":6,"column":23,"nodeType":"170","messageId":"174","endLine":6,"endColumn":29},{"ruleId":"172","severity":1,"message":"201","line":51,"column":40,"nodeType":"170","messageId":"174","endLine":51,"endColumn":52},{"ruleId":"165","severity":1,"message":"166","line":4,"column":22,"nodeType":"185","messageId":"168","endLine":4,"endColumn":39},{"ruleId":"165","severity":1,"message":"202","line":4,"column":23,"nodeType":"203","messageId":"204","endLine":4,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":31},{"ruleId":"165","severity":1,"message":"205","line":4,"column":26,"nodeType":"170","messageId":"171","endLine":4,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":37},{"ruleId":"165","severity":1,"message":"205","line":13,"column":32,"nodeType":"170","messageId":"171","endLine":13,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":22,"column":8,"nodeType":"167","messageId":"168","endLine":22,"endColumn":36},{"ruleId":"165","severity":1,"message":"205","line":22,"column":31,"nodeType":"170","messageId":"171","endLine":22,"endColumn":35},{"ruleId":"172","severity":1,"message":"206","line":1,"column":27,"nodeType":"170","messageId":"174","endLine":1,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":1,"column":48,"nodeType":"170","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"172","severity":1,"message":"207","line":2,"column":8,"nodeType":"170","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"208","line":27,"column":17,"nodeType":"170","messageId":"174","endLine":27,"endColumn":25},{"ruleId":"172","severity":1,"message":"209","line":121,"column":33,"nodeType":"170","messageId":"174","endLine":121,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":10,"column":1,"nodeType":"167","messageId":"168","endLine":10,"endColumn":33},{"ruleId":"165","severity":1,"message":"210","line":10,"column":22,"nodeType":"170","messageId":"211","endLine":10,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":10,"column":29,"nodeType":"178","messageId":"179","endLine":10,"endColumn":32,"suggestions":"212"},{"ruleId":"172","severity":1,"message":"193","line":4,"column":10,"nodeType":"170","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":10,"column":1,"nodeType":"167","messageId":"168","endLine":10,"endColumn":39},{"ruleId":"165","severity":1,"message":"213","line":10,"column":22,"nodeType":"203","messageId":"214","endLine":10,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":10,"column":35,"nodeType":"178","messageId":"179","endLine":10,"endColumn":38,"suggestions":"215"},{"ruleId":"172","severity":1,"message":"216","line":80,"column":13,"nodeType":"170","messageId":"174","endLine":80,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":6,"column":1,"nodeType":"167","messageId":"168","endLine":6,"endColumn":47},{"ruleId":"165","severity":1,"message":"213","line":6,"column":29,"nodeType":"203","messageId":"214","endLine":6,"endColumn":46},{"ruleId":"176","severity":1,"message":"177","line":6,"column":43,"nodeType":"178","messageId":"179","endLine":6,"endColumn":46,"suggestions":"217"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":1,"nodeType":"167","messageId":"168","endLine":5,"endColumn":44},{"ruleId":"165","severity":1,"message":"213","line":5,"column":26,"nodeType":"203","messageId":"214","endLine":5,"endColumn":43},{"ruleId":"176","severity":1,"message":"177","line":5,"column":40,"nodeType":"178","messageId":"179","endLine":5,"endColumn":43,"suggestions":"218"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":1,"nodeType":"167","messageId":"168","endLine":3,"endColumn":18},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'action' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","'ImportantTodo' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["219","220"],"'History' is assigned a value but never used.",["221","222"],["223","224"],["225","226"],"ArrowFunctionExpression","Argument 'props' should be typed.","'NavLink' is defined but never used.","'Remove' is defined but never used.",["227","228"],["229","230"],"'RouteComponentProps' is defined but never used.","'ReactRouterPropTypes' is defined but never used.","'string' is defined but never used.","'Link' is defined but never used.",["231","232"],["233","234"],"'props' is defined but never used.","'useLayoutEffect' is defined but never used.","'any' is defined but never used.","'number' is defined but never used.","'errorMessage' is assigned a value but never used.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","Argument 'body' should be typed.","'useRef' is defined but never used.","'Axios' is defined but never used.","'setTodos' is assigned a value but never used.","'todoId' is defined but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg",["235","236"],"Object pattern argument should be typed with a non-any type.","anyTypedArgUnnamed",["237","238"],"'email' is assigned a value but never used.",["239","240"],["241","242"],{"messageId":"243","fix":"244","desc":"245"},{"messageId":"246","fix":"247","desc":"248"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"246","fix":"250","desc":"248"},{"messageId":"243","fix":"251","desc":"245"},{"messageId":"246","fix":"252","desc":"248"},{"messageId":"243","fix":"253","desc":"245"},{"messageId":"246","fix":"254","desc":"248"},{"messageId":"243","fix":"255","desc":"245"},{"messageId":"246","fix":"256","desc":"248"},{"messageId":"243","fix":"257","desc":"245"},{"messageId":"246","fix":"258","desc":"248"},{"messageId":"243","fix":"259","desc":"245"},{"messageId":"246","fix":"260","desc":"248"},{"messageId":"243","fix":"261","desc":"245"},{"messageId":"246","fix":"262","desc":"248"},{"messageId":"243","fix":"263","desc":"245"},{"messageId":"246","fix":"264","desc":"248"},{"messageId":"243","fix":"265","desc":"245"},{"messageId":"246","fix":"266","desc":"248"},{"messageId":"243","fix":"267","desc":"245"},{"messageId":"246","fix":"268","desc":"248"},{"messageId":"243","fix":"269","desc":"245"},{"messageId":"246","fix":"270","desc":"248"},"suggestUnknown",{"range":"271","text":"272"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"271","text":"273"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"274","text":"272"},{"range":"274","text":"273"},{"range":"275","text":"272"},{"range":"275","text":"273"},{"range":"276","text":"272"},{"range":"276","text":"273"},{"range":"277","text":"272"},{"range":"277","text":"273"},{"range":"278","text":"272"},{"range":"278","text":"273"},{"range":"279","text":"272"},{"range":"279","text":"273"},{"range":"280","text":"272"},{"range":"280","text":"273"},{"range":"281","text":"272"},{"range":"281","text":"273"},{"range":"282","text":"272"},{"range":"282","text":"273"},{"range":"283","text":"272"},{"range":"283","text":"273"},{"range":"284","text":"272"},{"range":"284","text":"273"},[1229,1232],"unknown","never",[2823,2826],[3187,3190],[488,491],[420,423],[823,826],[670,673],[786,789],[242,245],[274,277],[146,149],[142,145]]