[{"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/index.js":"1","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/todo_reducer.js":"2","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/App.tsx":"3","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/index.tsx":"4","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Button.js":"5","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Nav.tsx":"6","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignOut.tsx":"7","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Welcome.tsx":"8","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/MyPage.tsx":"9","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove.tsx":"10","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Edit.tsx":"11","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove_completed.tsx":"12","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoListItem.js":"13","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_PW_completed.js":"14","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignIn.tsx":"15","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoTemplate.js":"16","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_actions/todo_action.js":"17","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoList.js":"18","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_Email_completed.js":"19","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/ToDo.js":"20","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_account.js":"21","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignUp.tsx":"22"},{"size":156,"mtime":1611667107447,"results":"23","hashOfConfig":"24"},{"size":719,"mtime":1611667107448,"results":"25","hashOfConfig":"26"},{"size":6910,"mtime":1611848041892,"results":"27","hashOfConfig":"24"},{"size":756,"mtime":1611668551098,"results":"28","hashOfConfig":"24"},{"size":464,"mtime":1611667107450,"results":"29","hashOfConfig":"26"},{"size":1242,"mtime":1611832420356,"results":"30","hashOfConfig":"24"},{"size":1529,"mtime":1611771713336,"results":"31","hashOfConfig":"24"},{"size":275,"mtime":1611832434964,"results":"32","hashOfConfig":"24"},{"size":3389,"mtime":1611832561042,"results":"33","hashOfConfig":"24"},{"size":3038,"mtime":1611763323592,"results":"34","hashOfConfig":"24"},{"size":2684,"mtime":1611735013970,"results":"35","hashOfConfig":"24"},{"size":1333,"mtime":1611771762600,"results":"36","hashOfConfig":"24"},{"size":1646,"mtime":1611667107469,"results":"37","hashOfConfig":"24"},{"size":779,"mtime":1611667107455,"results":"38","hashOfConfig":"24"},{"size":9923,"mtime":1611847101499,"results":"39","hashOfConfig":"24"},{"size":313,"mtime":1611667107472,"results":"40","hashOfConfig":"24"},{"size":1186,"mtime":1611667107445,"results":"41","hashOfConfig":"24"},{"size":1139,"mtime":1611667107468,"results":"42","hashOfConfig":"24"},{"size":917,"mtime":1611667107453,"results":"43","hashOfConfig":"24"},{"size":4242,"mtime":1611766808587,"results":"44","hashOfConfig":"24"},{"size":8432,"mtime":1611667107456,"results":"45","hashOfConfig":"24"},{"size":7819,"mtime":1611851294604,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1kxj8of",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"inc0fj",{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/index.js",[],[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_reducers/todo_reducer.js",["106","107"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/App.tsx",["108","109","110","111","112","113","114"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/index.tsx",["115"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// 리덕스 사용\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Reducer from \"./_reducers\";\n\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__?: any\n  }\n}\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Button.js",["116","117"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border: none;\n  border-radius: 4px;\n  font-weight: bolder;\n  font-size: 1rem;\n  margin-top: 1rem;\n  :center ;\n  text-decoration: none;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  background: hotpink;\n  &:hover {\n    background: #6a9bcc;\n  }\n`;\n\nconst Button = (props) => <StyledButton {...props} />;\nexport default Button;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Nav.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignOut.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Welcome.tsx",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/MyPage.tsx",["118","119","120","121"],"import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\n\n// components\nimport Remove from \"../components/Remove\";\nimport Edit from \"../components/Edit\";\nimport Button from \"../components/Button\";\nimport \"./MyPage.scss\";\n\ninterface Props {\n  id: string | null;\n  name: string | null;\n  email: string | null;\n  password: string;\n  mobile: string;\n  adoptModifiedInfo: (data: any) => void;\n  signOut: () => void;\n}\n\nconst MyPage: React.FC<Props> = (props) => {\n\n  console.log(\"myProps\", props)\n\n\n  const [mypageInfo, setMypageInfo] = useState<{\n    email: string | null;\n    password: string;\n    name: string | null;\n    mobile: string;\n  }>({\n    email: props.email,\n    password: props.password,\n    name: props.name,\n    mobile: props.mobile\n  })\n  const makeChange = (data: any) => {\n    if (data.password !== \"\") setMypageInfo({ ...mypageInfo, password: data.password });\n    if (data.name !== \"\") setMypageInfo({ ...mypageInfo, name: data.name });\n    props.adoptModifiedInfo(data);\n  }\n\n  useEffect(() => {\n    mypageInfo;\n    makeChange;\n  })\n\n  const { email, name } = mypageInfo;\n\n  return (\n    <>\n      <br />\n      <br />\n      <section className=\"mypage\">\n        <div className=\"myinfo-title\">&#129296; 회원정보</div>\n        <div>\n          <div className=\"email-info\">\n            <div className=\"description\">e-mail</div>\n            <div className=\"print\">{email}</div>\n          </div>\n          <div className=\"pw-info\">\n            <div className=\"description\">PW</div>\n            <div className=\"print\">******</div>\n          </div>\n          <div className=\"name-info\">\n            <div className=\"description\">고객명</div>\n            <div className=\"print\">{name}</div>\n          </div>\n          <div className=\"mobile-info\">\n            <div className=\"description\">연락처</div>\n            <div className=\"print\">010-****-****</div>\n          </div>\n        </div>\n        <div className=\"myinfobox\">\n          <div>\n            <Button>\n              {/* props내리기 --> 아래와 같이 작성하면 props.location 혹은 props.history.location에 아래 정보가 담겨 전달\n                    전달받은 Remove.js는 this.props.location 혹은 this.props.history.location에 담긴 pw를 사용할 수 있음\n                */}\n              <Link\n                to={{\n                  pathname: \"/remove\",\n                  // state: {\n                  //   password: props.password,\n                  // },\n                  // signOut: props.signOut, // 메소드화가 되어 전달되어질 것. ex) signOut();\n                }}\n\n                style={{ color: `white`, textDecoration: `none` }}\n\n              // to={\"/remove\"}\n              // style={{ textDecoration: \"none\", color: \"white\" }}\n              // email={email}\n              // password={password}\n              // name={name}\n              // mobile={mobile}\n              >\n                회원탈퇴\n                </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n      <br />\n      <br />\n      <br />\n      <hr />\n      <br />\n      <br />\n      <br />\n      <section>\n        <Edit\n          // to={\"/edit\"}\n          // style={{ textDecoration: \"none\", color: \"black\" }}\n          makeChange={makeChange}\n        />\n      </section>\n    </>\n  )\n}\n\n\n\nexport default MyPage;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove.tsx",["122","123","124"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Edit.tsx",["125","126","127","128"],"import { string } from \"prop-types\";\nimport React, { useCallback, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Button from \"./Button\";\n\nimport \"./Edit.scss\";\n\n/*****************************************************************\n                            리액트 훅 명세표\n\n(1) useReducer\n - Input 개체가 다수일 때, 이것들에 의한 state 변화를 한번에 관리하기 위함\n - 클래스 컴포넌트에서 e.target.value들에 대한 setState를 한번에 한 것과 동일\n - \n\n(2) useCallback\n - ToDo.js 컴포넌트의 주석 참조 부탁드립니다.\n******************************************************************/\n\ninterface State {\n  password: string;\n  name: string;\n}\n\n// reducer hook 액션 정의\nfunction reducer(state: State, action: any) {\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n}\n\ninterface editProps {\n  makeChange: (data: any) => void;\n}\n\n\nconst Edit: React.FC<editProps> = (props) => {\n  // reducer hook으로 한꺼번에 state 관리할 대상 정의\n  const [state, dispatch] = useReducer(reducer, {\n    password: \"\",\n    name: \"\",\n  });\n\n  const { password, name } = state;\n\n  // reducer hook 구동 대상(\"액션값\")은 \"이벤트 객체(e.target 값)\"라고 설정\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(e.target);\n  };\n\n  // reducer hook 구동 결과(state)를 부모(MyPage.js) 컴포넌트로 끌어올리기\n  const onClick = useCallback(() => {\n    console.log(`제출!! =======>\n    최종제출 비밀번호: ${state.password}\n    최종제출 이름: ${state.name}\n    `);\n\n    props.makeChange(state);\n  }, [props.makeChange, state]);\n\n  return (\n    <>\n      <section className=\"editpage\">\n        <div className=\"myinfo-title\">&#9997; 회원정보 수정</div>\n        <div>\n          <div>\n            <div className=\"description\">PW</div>\n            <input\n              className=\"editbox\"\n              type=\"text\"\n              name=\"password\"\n              value={password}\n              placeholder=\"변경할 비밀번호를 입력하세요\"\n              onChange={onChange}\n            ></input>\n          </div>\n          <div>\n            <div className=\"description\">고객명</div>\n            <input\n              className=\"editbox\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"변경할 고객명을 입력하세요\"\n              onChange={onChange}\n            ></input>\n          </div>\n        </div>\n      </section>\n      <div>\n        <Button onClick={onClick}>수정</Button>\n      </div>\n    </>\n  );\n};\n\nexport default Edit;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Remove_completed.tsx",["129"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\"\nimport Button from \"./Button\";\n\ninterface RemoveUserCompletedState {\n  isModalOpen: boolean\n}\nconst RemoveUserCompleted: React.FC<RemoveUserCompletedState> = (props) => {\n\n  const [modal, setModal] = useState<boolean>(true)\n  const History = useHistory();\n\n  const closeModal = () => {\n    setModal(\n      false\n    )\n    // this.props.history.push(\"/\")\n    History.push(\"/\")\n\n  };\n\n\n  return (\n    <>\n      { modal === true ?\n        <div className=\"modal\">\n          <div className=\"modal_overlay\" onClick={closeModal}></div>\n          <div className=\"modal_content\">\n            <h1>회원 탈퇴</h1>\n\n            <div className=\"container\">\n\n              <div className=\"container1\">\n\n                <div>\n                  회원 탈퇴가 완료되었습니다.\n                </div>\n\n              </div>\n              <div>\n                <NavLink to=\"/\" className='signUp_link'>\n                  <Button\n                    className=\"signUp_btn\"\n                  >\n                    로그인 페이지\n                </Button>\n                </NavLink>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        : null}\n    </>\n  );\n}\n\n\nexport default RemoveUserCompleted;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoListItem.js",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_PW_completed.js",["130"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass CompletedFindPw extends React.Component {\n  render() {\n\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_overlay\"></div>\n        <div className=\"modal_content\">\n          <h2>e-mail</h2>\n\n          <div className=\"container\">\n            <h2>PW</h2>\n            <div className=\"find_pw_box\">\n              <div className=\"information\">\n                {this.props.location.state}\n              </div>\n            </div>\n\n            <NavLink to=\"\" className=\"signUp_link\">\n              <button className=\"signUp_btn\">로그인 페이지로 돌아가기</button>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CompletedFindPw;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignIn.tsx",["131","132","133","134","135"],"import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../image/logo.png\";\n// import user from \"../test_data_user.json\";\nimport axios from \"axios\";\nimport { any, number, string } from \"prop-types\";\n\ninterface SignInModalProps {\n    handleResponseSuccess: () => void;\n}\n\nconst SignInModal: React.FC<SignInModalProps> = (props) => {\n\n    // const [id, setId] = useState<string>(\"\")\n    // const [email, setEmail] = useState<string>(\"\")\n    // const [name, setName] = useState<string>(\"\")\n    // const [password, setPassword] = useState<string>(\"\")\n    // const [errorMessage, setErrorMessage] = useState<string>(\"\")\n\n\n    const [userInfo, setUserInfo] = useState<{\n        id: string;\n        email: string;\n        name: string;\n        password: string;\n        errorMessage: string;\n    }>({\n        id: \"\",\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        errorMessage: \"\"\n    })\n    // const [userInfo, setUserInfo] = useState({\n    //     id: \"\",\n    //     email: \"\",\n    //     name: \"\",\n    //     password: \"\",\n    //     errorMessage: \"\"\n    // })\n\n    // const [userInfo, setuserInfo] = useState<{\n    //     email?: string;\n    //     password?: string;\n    // }>({\n    //     email: \"\",\n    //     password: \"\"\n    // })\n\n    const { id, email, name, password, errorMessage } = userInfo;\n\n    // console.log(\"props\", this.props); // App.js 로부터 handleResponseSuccess()가 내려옴\n    /* ----------------소셜 로그인------------------- */\n    /* ----------------로그인----------------------- */\n    // console.log(\"name\", name)\n    // // const { email, password } = userInfo\n    // console.log(\"string obeject\", userInfo)\n    // console.log(\"email\", email)\n    // console.log(\"pw\", password)\n    // e-mail, pw 입력 기능\n    const hadleInputValue = (key: string) => (text: React.ChangeEvent<HTMLInputElement>) => {\n        setUserInfo({\n            ...userInfo,\n            [key]: text.target.value,\n        });\n        console.log(\"ㅁㄴㅇㄹㅁㄴㅇ\", text.target.value)\n    };\n    const handleSignIn = () => {\n        // const signInfo = {\n        //     email: userInfo.email,\n        //     password: userInfo.password,\n        // };\n        // console.log(\"handlelength\", email)\n\n\n        if (!email.length || !password.length) {\n            setUserInfo({\n                ...userInfo,\n                errorMessage: \"e-mail과 비밀번호를 입력하세요.\",\n            });\n        } else {\n            axios\n                .post(\"https://api.get-todo.com/signin\", userInfo)\n                .then((response) => {\n                    // console.log(\"뭘받아와?\", response);\n                    // setUserInfo({\n                    //     ...userInfo,\n                    //     id: response.data.id, // 서버에서 생성 및 전달받은 고유 유저id\n                    //     // name: \"zxc\",\n                    //     name: response.data.name,\n                    //     email: response.data.email,\n                    // })\n                    window.sessionStorage.setItem(\"id\", response.data.id)\n                    window.sessionStorage.setItem(\"name\", response.data.name)\n                    window.sessionStorage.setItem(\"email\", response.data.email)\n                    console.log(\"axiosthen\", userInfo)\n                    console.log(\"response\", response.data.name)\n\n                    doSignIn();\n                })\n                .catch((error) => {\n                    console.log(\"??\", error.response)\n                    setUserInfo({\n                        ...userInfo,\n                        errorMessage: error.response.data,\n                    });\n                    console.log(\"axios\", userInfo.errorMessage)\n                });\n        }\n\n        /*     fakedata 용 코드\n                for (let i = 0; i < user.length; i++) {\n                  if (!signInfo.email.length || !signInfo.password.length) {\n                    this.setState({\n                      errorMessage: \"e-mail과 PW를 입력하세요.\",\n                    });\n                  }\n                  //* 입력이 된 값으로 서버에 로그인 요청을 하고, props로 전달된 callback을 호출\n                  // else {  //! 추후 알맞게 수정하기, 우선은 fackdata로\n                  //     axios.post('http://localhost:8000/', signInfo)\n                  //         .then(res => {\n                  //             this.props.handleResponseSuccess()\n                  //         })\n                  //         .catch(error => {\n                  //             this.setState({\n                  //                 errorMessage: 'e-mail 혹은 PW가 일치하지 않습니다.'\n                  //             })\n                  //         })\n                  // }\n                  else {\n                    if (\n                      user[i].email === this.state.email &&\n                      user[i].password === this.state.password\n                    ) {\n                      // this.doSignIn();\n                      this.doSignIn();\n                    } else\n                      this.setState({\n                        errorMessage: \"e-mail 혹은 PW가 일치하지 않습니다.\",\n                      });\n                  }\n                  // console.log(user)\n                } */\n    };\n    console.log(\"사인 state\", userInfo);\n    //! session storage에 저장하여 로그인을 유지시킨다.\n    const doSignIn = () => {\n        // const { id, name } = userInfo;\n        // console.log(\"dosignin\", email)\n        // window.sessionStorage.setItem(\"id\", id);\n        // window.sessionStorage.setItem(\"email\", email);\n        // window.sessionStorage.setItem(\"name\", name);\n        // const { id, name } = userInfo;\n        // const { email } = userInfo;\n\n        // window.sessionStorage.setItem(\"id\", userInfo.id!);\n        // window.sessionStorage.setItem(\"name\", userInfo.name!);\n        // window.sessionStorage.setItem(\"email\", userInfo.email!);\n        props.handleResponseSuccess(); // App.js로 state 끌어올려서 App.js의 isLogin을 true로 변경해주어 홈경로 또한 바뀌고 동시에 컴포넌트도 todo로 변경된다.\n    };\n\n    // useLayoutEffect(() => {\n    //     console.log(\"layout\", userInfo)\n    //     // window.sessionStorage.setItem(\"id\", id);\n    //     // window.sessionStorage.setItem(\"email\", email);\n    //     // window.sessionStorage.setItem(\"name\", name);\n    // })\n    useEffect(() => {\n        console.log(\"effect\", userInfo)\n\n        // window.sessionStorage.setItem(\"id\", id)\n        // window.sessionStorage.setItem(\"email\", email)\n        // window.sessionStorage.setItem(\"name\", name)\n\n    }, [id, email, name]);\n    // }, []);\n\n    // window.sessionStorage.setItem(\"id\", id)\n    // window.sessionStorage.setItem(\"email\", email)\n    // window.sessionStorage.setItem(\"name\", name)\n    window.sessionStorage.setItem(\"sdf\", \"asdf\")\n\n\n    console.log(\"사인인,세션저장소\", window.sessionStorage);\n    return (\n        <div className=\"modal hidden\">\n            <div className=\"modal_overlay\"></div>\n            <div className=\"modal_content\">\n                <h1>너의 시간을 겟~⭐️</h1>\n                <div className=\"container\">\n                    <div className=\"signUp_div\">\n                        <NavLink to=\"/signup\" className=\"signUp_link\">\n                            아직 회원이 아니신가요?\n              </NavLink>\n                    </div>\n                    <img\n                        id=\"sign_in_img\"\n                        //   src=\"https://t1.daumcdn.net/cfile/tistory/992C413B5D2ACF7C1D\"\n                        src={logo}\n                    ></img>\n                    {/*-------------- e-mail pw 입력칸 ----------------- */}\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"container1\">\n                            <div className=\"email_div\">\n                                <span className=\"email_span\">e-mail</span>\n                                <input\n                                    type=\"email\"\n                                    onChange={hadleInputValue(\"email\")}\n                                ></input>\n                            </div>\n                            <div className=\"PW_div\">\n                                <span>PW</span>\n                                <input\n                                    type=\"password\"\n                                    onChange={hadleInputValue(\"password\")}\n                                ></input>\n                            </div>\n                        </div>\n                        <div className=\"findAccount_span\">\n                            <span>\n                                <NavLink to=\"/findaccount\" className=\"findAccount_link\">\n                                    e-mail | PW 찾기\n                  </NavLink>\n                            </span>\n                        </div>\n                        <div>\n                            {/* <NavLink to=\"/todo\"> */}\n                            <button\n                                className=\"loginButton\"\n                                type=\"submit\"\n                                onClick={handleSignIn}\n                            >\n                                로그인\n                </button>\n                            {/* </NavLink> */}\n                            <div>\n                                <button className=\"loginButton\" type=\"submit\">\n                                    Github 로그인\n                  </button>\n                            </div>\n                            <div className=\"alert-box\">{userInfo.errorMessage}</div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignInModal;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoTemplate.js",["136","137"],"import React from \"react\";\nimport \"./TodoStyle/TodoTemplate.scss\";\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"appTemplate\">\n      <div className=\"appTitle\">&#128540; SET TO-DO!</div>\n      <div className=\"appContent\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/_actions/todo_action.js",["138","139","140","141","142","143"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Todo/TodoList.js",[],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_Email_completed.js",["144"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass CompletedFindEmail extends React.Component {\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_overlay\"></div>\n        <div className=\"modal_content\">\n          <h2>e-mail</h2>\n\n          <div className=\"container\">\n            <div className=\"find_e-mail_box\">\n              <div className=\"information\">\n                {this.props.location.state}\n              </div>\n            </div>\n\n            <NavLink to=\"/findaccount\">\n              <button className=\"findBtn\">PW 찾기</button>\n            </NavLink>\n\n            <NavLink to=\"\" className=\"signUp_link\">\n              <button className=\"signUp_btn\">로그인 페이지로 돌아가기</button>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CompletedFindEmail;\n","/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/routes/ToDo.js",["145","146","147","148","149"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/Find_account.js",["150","151","152","153","154","155","156","157"],"/Users/john/Desktop/17->19/codestates/real_first_pro/client/src/components/SignUp.tsx",["158","159","160","161"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\n\n//fakedate\n// import user from \"../test_data_user.json\";\n\n\nfunction SignUpModal(props: any) {\n\n  const [info, setInfo] = useState<{\n    name: string;\n    password: string;\n    email: string;\n    mobile: string;\n    duplicatedIdMsg: string;\n    errorMessage: string,\n    errorMessageMobile: string,\n    errorMessageEmail: string,\n  }>({\n    name: \"\",\n    password: \"\",\n    email: \"\",\n    mobile: \"\",\n    duplicatedIdMsg: \"\",\n    errorMessage: \"\",\n    errorMessageMobile: \"\",\n    errorMessageEmail: \"\",\n  })\n\n\n  /* //! 백앤드 분들께 구현 요청하기 due to sign up function flows \n    //* 연락처 형식 헬퍼 함수: '-' 삽입 필수\n    notFormedMobileNum = () => {\n      const { mobile } = this.state;\n      const userIdInfo = {\n        mobile: mobile,\n      };\n      let count = 0;\n      for (let i = 0; i < userIdInfo.mobile.length; i++) {\n        if (userIdInfo.mobile[i] === \"-\") {\n          count++;\n          if (count === 2) {\n            console.log(\"c\", count);\n            return;\n          }\n        }\n      }\n      this.setState({\n        errorMessageMobile: \"'-'를 입력해주세요.\"\n      });\n    };\n   */\n\n  // 중복확인 --> 백앤드 팀원들에게 구현했는지 물어보기 우선, 기능플로우 부터 확인.\n  //fakedata 이용\n  const handleClickduplicatedId = () => {\n    const { email, duplicatedIdMsg } = info\n    const userInfo = {\n      email: email,\n      message: duplicatedIdMsg,\n    };\n\n    axios\n      .post(\"https://api.get-todo.com/searchinfo/overlapEmail\", userInfo)\n      .then((response) => {\n        console.log(\"중복이메일?\", response);\n        setInfo({\n          ...info,\n          duplicatedIdMsg: response.data\n        })\n        // alert(info.duplicatedIdMsg)\n        setInfo({\n          ...info,\n          duplicatedIdMsg: \"\"\n        })\n      })\n      .catch((error) => {\n        setInfo({\n          ...info,\n          duplicatedIdMsg: error.response.data\n        })\n        // alert(info.duplicatedIdMsg)\n      })\n\n\n    /* fakeData 사용 코드\n    for (let i = 0; i < user.length; i++) {\n      if (!userInfo.email.length) {\n        return alert(\"항목을 입력해주세요.\");\n        \n      }\n      else if (userInfo.email === user[i].email) {\n        return alert(\"이미 존재하는 e-mail입니다.\");\n      }\n      else if (!userInfo.email.includes('@') || !userInfo.email.includes('.')) {\n        return alert(\"이메일 형식을 지켜주세요. ex) @, .com 등\");\n      }\n    }\n    return alert(\"사용이 가능한 e-mail입니다.\");*/\n  };\n  useEffect(() => { // axios와 같은 fetch 비동기 해결(state 적용되는 속도 맞추기 위함)\n    if (info.duplicatedIdMsg.length > 0) {\n      try {\n        alert(info.duplicatedIdMsg)\n      }\n      catch {\n        console.log(\"주의 메시지가 없습니다.\")\n      }\n    }\n  })\n\n  const handleInPutValue = (key: string) => (text: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"잘 입력되나?\");\n    // console.log('k', key)\n    // console.log('t', text)\n    setInfo({\n      ...info,\n      [key]: text.target.value,\n    });\n    console.log(text);\n  };\n\n  // 회원가입한 새로운 유저 정보를 데이터 베이스에 저장한다.\n  // 서버에 회원가입을 요청 후 로그인 페이지로 이동한다.\n  const handClickAddNewUserInfo = () => {\n    const { name, password, email, mobile } = info\n    const NewUserInformation = {\n      name: name,\n      password: password,\n      email: email,\n      mobile: mobile,\n    };\n\n    // 신규 등록 회원 정보를 서버로 전달 서버 -> DB -> DB 저장 후 해당 정보를 response에 담아서 클라이언트로 재 전송될 것.\n\n    // if (\n    //   NewUserInformation.email.length &&\n    //   NewUserInformation.password.length &&\n    //   NewUserInformation.name.length &&\n    //   NewUserInformation.mobile.length\n    // ) {\n    //   this.notFormedMobileNum();  //! 코드 순서 때문에 알고리즘 무용지물. 백앤드분들께 -- 규칙 적용해달라 요청하기.\n    // }\n\n    axios\n      .post(\"https://api.get-todo.com/signup\", NewUserInformation)\n      .then((response) => {\n        console.log(\"res\", response);\n        alert(\"회원가입이 완료되었습니다. 로그인을 해주세요.\")\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"err\", error.response);\n        setInfo({\n          ...info,\n          errorMessage: error.response.data,\n        });\n      });\n\n    /*  fake Data\n         if (\n          !NewUserInformation.email.length ||\n          !NewUserInformation.password.length ||\n          !NewUserInformation.name.length ||\n          !NewUserInformation.mobile.length\n        ) {\n          this.setState({\n            errorMessage: \"모든 항목은 필수입니다.\",\n          });\n        } else if (\n          NewUserInformation.email.length &&\n          NewUserInformation.password.length &&\n          NewUserInformation.name.length &&\n          NewUserInformation.mobile.length\n        ) {\n          this.notFormedMobileNum();\n        } */\n\n    //! 해당 신규 유저의 정보를 서버로 post 요청을 한 후(DB추가 등),  res로 응답코드를 받든 뭐든 받으면 로그인 페이지로 리다이렉트\n    //* 서버 통신시 아래 코드를 테스트해보고 사용하기\n    /*     else {\n      axios.post('http', NewUserInformation)\n      .then(response => {\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        this.setState({\n          errorMessage: \"회원가입에 실패했습니다. 다시 시도해주세요.\"\n        })\n      })\n    } */\n  };\n\n\n  // console.log('user', user)\n  // console.log(this.props)\n  return (\n    <div className=\"modal\">\n      <div className=\"modal_overlay\"></div>\n      <div className=\"modal_content\">\n        <h1>회원 가입</h1>\n\n        <div className=\"container\">\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <div className=\"container1\">\n              <div className=\"inputInfo\">\n                <span className=\"email_span\">e-mail</span>\n                <input\n                  type=\"email\"\n                  onChange={handleInPutValue(\"email\")}\n                ></input>\n                <button\n                  className=\"check\"\n                  onClick={handleClickduplicatedId}\n                >\n                  중복 확인\n                  </button>\n                {/* <div>{info.duplicatedIdMsg}</div> */}\n              </div>\n\n              <div>\n                <span>PW</span>\n                <input\n                  type=\"password\"\n                  onChange={handleInPutValue(\"password\")}\n                ></input>\n              </div>\n\n              <div>\n                <span>고객명</span>\n                <input\n                  type=\"text\"\n                  onChange={handleInPutValue(\"name\")}\n                ></input>\n              </div>\n\n              <div>\n                <span>연락처</span>\n                <input\n                  type=\"text\"\n                  onChange={handleInPutValue(\"mobile\")}\n                ></input>\n                <div>{info.errorMessageMobile}</div>\n              </div>\n            </div>\n            <div>\n              <div>{info.errorMessage}</div>\n\n              {/* <NavLink to='' className='signUp_link'> */}\n              <button\n                className=\"signUp_btn\"\n                onClick={handClickAddNewUserInfo}\n              >\n                회원 가입\n                </button>\n              {/* </NavLink> */}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default SignUpModal;\n",{"ruleId":"162","severity":1,"message":"163","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":45},{"ruleId":"162","severity":1,"message":"166","line":1,"column":38,"nodeType":"167","messageId":"168","endLine":1,"endColumn":44},{"ruleId":"169","severity":1,"message":"170","line":1,"column":17,"nodeType":"167","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"172","line":13,"column":8,"nodeType":"167","messageId":"171","endLine":13,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":22,"column":1,"nodeType":"164","messageId":"165","endLine":22,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":41,"column":38,"nodeType":"175","messageId":"176","endLine":41,"endColumn":41,"suggestions":"177"},{"ruleId":"169","severity":1,"message":"178","line":43,"column":9,"nodeType":"167","messageId":"171","endLine":43,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":113,"column":36,"nodeType":"175","messageId":"176","endLine":113,"endColumn":39,"suggestions":"179"},{"ruleId":"173","severity":1,"message":"174","line":120,"column":34,"nodeType":"175","messageId":"176","endLine":120,"endColumn":37,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"174","line":20,"column":36,"nodeType":"175","messageId":"176","endLine":20,"endColumn":39,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"163","line":22,"column":16,"nodeType":"182","messageId":"165","endLine":22,"endColumn":26},{"ruleId":"162","severity":1,"message":"183","line":22,"column":17,"nodeType":"167","messageId":"168","endLine":22,"endColumn":22},{"ruleId":"169","severity":1,"message":"184","line":2,"column":16,"nodeType":"167","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"169","severity":1,"message":"185","line":6,"column":8,"nodeType":"167","messageId":"171","endLine":6,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":17,"column":29,"nodeType":"175","messageId":"176","endLine":17,"endColumn":32,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"174","line":37,"column":29,"nodeType":"175","messageId":"176","endLine":37,"endColumn":32,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"184","line":3,"column":10,"nodeType":"167","messageId":"171","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"188","line":3,"column":19,"nodeType":"167","messageId":"171","endLine":3,"endColumn":38},{"ruleId":"169","severity":1,"message":"189","line":5,"column":8,"nodeType":"167","messageId":"171","endLine":5,"endColumn":28},{"ruleId":"169","severity":1,"message":"190","line":1,"column":10,"nodeType":"167","messageId":"171","endLine":1,"endColumn":16},{"ruleId":"169","severity":1,"message":"191","line":3,"column":10,"nodeType":"167","messageId":"171","endLine":3,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":28,"column":40,"nodeType":"175","messageId":"176","endLine":28,"endColumn":43,"suggestions":"192"},{"ruleId":"173","severity":1,"message":"174","line":36,"column":22,"nodeType":"175","messageId":"176","endLine":36,"endColumn":25,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"194","line":9,"column":66,"nodeType":"167","messageId":"171","endLine":9,"endColumn":71},{"ruleId":"162","severity":1,"message":"163","line":5,"column":3,"nodeType":"195","messageId":"165","endLine":5,"endColumn":11},{"ruleId":"169","severity":1,"message":"196","line":1,"column":28,"nodeType":"167","messageId":"171","endLine":1,"endColumn":43},{"ruleId":"169","severity":1,"message":"197","line":6,"column":10,"nodeType":"167","messageId":"171","endLine":6,"endColumn":13},{"ruleId":"169","severity":1,"message":"198","line":6,"column":15,"nodeType":"167","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"169","severity":1,"message":"190","line":6,"column":23,"nodeType":"167","messageId":"171","endLine":6,"endColumn":29},{"ruleId":"169","severity":1,"message":"199","line":50,"column":40,"nodeType":"167","messageId":"171","endLine":50,"endColumn":52},{"ruleId":"162","severity":1,"message":"163","line":4,"column":22,"nodeType":"182","messageId":"165","endLine":4,"endColumn":39},{"ruleId":"162","severity":1,"message":"200","line":4,"column":23,"nodeType":"201","messageId":"202","endLine":4,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":31},{"ruleId":"162","severity":1,"message":"203","line":4,"column":26,"nodeType":"167","messageId":"168","endLine":4,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":37},{"ruleId":"162","severity":1,"message":"203","line":13,"column":32,"nodeType":"167","messageId":"168","endLine":13,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":22,"column":8,"nodeType":"164","messageId":"165","endLine":22,"endColumn":36},{"ruleId":"162","severity":1,"message":"203","line":22,"column":31,"nodeType":"167","messageId":"168","endLine":22,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":5,"column":3,"nodeType":"195","messageId":"165","endLine":5,"endColumn":11},{"ruleId":"169","severity":1,"message":"204","line":1,"column":27,"nodeType":"167","messageId":"171","endLine":1,"endColumn":33},{"ruleId":"169","severity":1,"message":"170","line":1,"column":48,"nodeType":"167","messageId":"171","endLine":1,"endColumn":57},{"ruleId":"169","severity":1,"message":"205","line":2,"column":8,"nodeType":"167","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"206","line":27,"column":17,"nodeType":"167","messageId":"171","endLine":27,"endColumn":25},{"ruleId":"169","severity":1,"message":"207","line":121,"column":33,"nodeType":"167","messageId":"171","endLine":121,"endColumn":39},{"ruleId":"162","severity":1,"message":"183","line":9,"column":15,"nodeType":"167","messageId":"168","endLine":9,"endColumn":20},{"ruleId":"162","severity":1,"message":"208","line":20,"column":23,"nodeType":"167","messageId":"168","endLine":20,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":20,"column":31,"nodeType":"182","messageId":"165","endLine":20,"endColumn":40},{"ruleId":"162","severity":1,"message":"209","line":20,"column":32,"nodeType":"167","messageId":"168","endLine":20,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":72,"column":26,"nodeType":"182","messageId":"165","endLine":72,"endColumn":31},{"ruleId":"169","severity":1,"message":"210","line":73,"column":13,"nodeType":"167","messageId":"171","endLine":73,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":127,"column":23,"nodeType":"182","messageId":"165","endLine":127,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":192,"column":3,"nodeType":"195","messageId":"165","endLine":192,"endColumn":11},{"ruleId":"169","severity":1,"message":"184","line":3,"column":10,"nodeType":"167","messageId":"171","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":9,"column":1,"nodeType":"164","messageId":"165","endLine":9,"endColumn":33},{"ruleId":"162","severity":1,"message":"211","line":9,"column":22,"nodeType":"167","messageId":"212","endLine":9,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":9,"column":29,"nodeType":"175","messageId":"176","endLine":9,"endColumn":32,"suggestions":"213"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'action' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","'ImportantTodo' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["214","215"],"'History' is assigned a value but never used.",["216","217"],["218","219"],["220","221"],"ArrowFunctionExpression","Argument 'props' should be typed.","'NavLink' is defined but never used.","'Remove' is defined but never used.",["222","223"],["224","225"],"'RouteComponentProps' is defined but never used.","'ReactRouterPropTypes' is defined but never used.","'string' is defined but never used.","'Link' is defined but never used.",["226","227"],["228","229"],"'props' is defined but never used.","FunctionExpression","'useLayoutEffect' is defined but never used.","'any' is defined but never used.","'number' is defined but never used.","'errorMessage' is assigned a value but never used.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","Argument 'body' should be typed.","'useRef' is defined but never used.","'Axios' is defined but never used.","'setTodos' is assigned a value but never used.","'todoId' is defined but never used.","Argument 'key' should be typed.","Argument 'text' should be typed.","'email' is assigned a value but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg",["230","231"],{"messageId":"232","fix":"233","desc":"234"},{"messageId":"235","fix":"236","desc":"237"},{"messageId":"232","fix":"238","desc":"234"},{"messageId":"235","fix":"239","desc":"237"},{"messageId":"232","fix":"240","desc":"234"},{"messageId":"235","fix":"241","desc":"237"},{"messageId":"232","fix":"242","desc":"234"},{"messageId":"235","fix":"243","desc":"237"},{"messageId":"232","fix":"244","desc":"234"},{"messageId":"235","fix":"245","desc":"237"},{"messageId":"232","fix":"246","desc":"234"},{"messageId":"235","fix":"247","desc":"237"},{"messageId":"232","fix":"248","desc":"234"},{"messageId":"235","fix":"249","desc":"237"},{"messageId":"232","fix":"250","desc":"234"},{"messageId":"235","fix":"251","desc":"237"},{"messageId":"232","fix":"252","desc":"234"},{"messageId":"235","fix":"253","desc":"237"},"suggestUnknown",{"range":"254","text":"255"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"254","text":"256"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"257","text":"255"},{"range":"257","text":"256"},{"range":"258","text":"255"},{"range":"258","text":"256"},{"range":"259","text":"255"},{"range":"259","text":"256"},{"range":"260","text":"255"},{"range":"260","text":"256"},{"range":"261","text":"255"},{"range":"261","text":"256"},{"range":"262","text":"255"},{"range":"262","text":"256"},{"range":"263","text":"255"},{"range":"263","text":"256"},{"range":"264","text":"255"},{"range":"264","text":"256"},[1229,1232],"unknown","never",[2823,2826],[3187,3190],[488,491],[420,423],[823,826],[670,673],[786,789],[211,214]]